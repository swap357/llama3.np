name: Test and Benchmark

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10']

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        pip install -e .
    
    - name: Download model weights
      run: |
        mkdir -p models
        # Example - replace with actual model download links
        # wget -O models/stories15M.model.npz https://example.com/stories15M.model.npz
        # wget -O models/tokenizer.model.np https://example.com/tokenizer.model.np
    
    - name: Run tests
      run: |
        pytest --cov=llama3np
    
    - name: Upload coverage report
      uses: codecov/codecov-action@v3

  benchmark:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
    
    - name: Download model weights
      run: |
        mkdir -p models
        # Example - replace with actual model download links
        # wget -O models/stories15M.model.npz https://example.com/stories15M.model.npz
        # wget -O models/tokenizer.model.np https://example.com/tokenizer.model.np
    
    - name: Run benchmarks
      run: |
        python run_benchmarks.py --all --iterations 10 --max-tokens 5
    
    - name: Upload benchmark results
      uses: actions/upload-artifact@v3
      with:
        name: benchmark-results
        path: benchmark_results/